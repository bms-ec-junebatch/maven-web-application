pipeline{

agent any

tools{
maven 'maven3.8.6'
}

options {
  timestamps()
  buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5'))
  
}

triggers {
  pollSCM('* * * * *')
  //cron ('* * * * *')
}
parameters
{
choice(choices: ['master', 'development', 'uat', 'test', 'stage'], description: 'select the baranch name', name: 'Branchname')
string(defaultValue: 'Mithuntechnologies', description: 'give the name parametervalue', name: 'Name') 
}
//This stage will get the Source from the Github
stages{
stage('CheckOutCode'){
steps{
    slackNotifications('STARTED')
git branch: "${params.Branchname}", credentialsId: '19af889a-8bf2-4f73-892e-309c86eb1987', url: 'https://github.com/bms-ec-junebatch/maven-web-application.git'
}
}
//This stage will do the build
stage('Build'){
steps{
sh "mvn clean package"
}
}
/*
//This Stage will be execute SonarQube Report
stage('ExecuteSonarQubeReport'){
steps{
sh "mvn clean sonar:sonar"
}
}
//This stage will Upload the Artifcats into Nexus Repos
stage('UploadArtifactIntoArtifactoryRepo'){
steps{
sh "mvn clean deploy"
}
}

//Deploy Application Into Tomcat Server
stage('DeployAppIntoTomcatServer')
{
steps{
sshagent(['6fe48055-0fdb-4060-988a-97447b091135']) {
sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.37.155:/opt/apache-tomcat-9.0.65/webapps"
}
}
}
*/
}//stages closing

post {
  success {
    slackNotifications(currentBuild.result)
  }
  failure {
    slackNotifications(currentBuild.result)
  }
}

}//pipeline closing

//Code Snippet for sending slack notifications.

def slackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'
  
  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    colorName = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    colorName = 'GREEN'
    colorCode = '#00FF00'
  } else {
    colorName = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: "#walmart")
}
